import * as jsPDF from 'jspdf';

import store from "../store/index";

const margins = {
  top: 70,
  bottom: 40,
  left: 30,
  width: 550
};

const generatePDF = (props) => {
  const doc = new jsPDF('p', 'pt', 'a4');
  doc.setFontSize(18);

  const pages = [];

  // find initial node and initially populate page_ranges
  props.nodes.forEach(function (node, i){
    if(node.data.is_start === true){
      pages.unshift({
        id: node.id,
        page_start: 0,
        page_end: 0,
        title: node.data.title,
        content: node.data.content,
        props_index: i,
        edges: node.edges
      });
    } else {
      pages.push({
        id: node.id,
        page_start: 0,
        page_end: 0,
        title: node.data.title,
        content: node.data.content,
        props_index: i,
        edges: node.edges
      });
    }
  });

  // Do title page
  doc.text(props.graph_title, margins.left, margins.top, {maxWidth: margins.width});
  doc.setTextColor("blue");
  doc.textWithLink("Generated By Descartes-o-graph.xyz", margins.left, margins.top + 30, {url: "http://www.descartograph.xyz"})


  doc.setTextColor("black");

  // insert pages
  pages.forEach(function (node, i){
    doc.setFontStyle("normal")
    doc.addPage();
    let page_count = doc.internal.getNumberOfPages();

    doc.setFontStyle("bold");
    doc.text(node.title, margins.left, margins.top, {maxWidth: margins.width});

    doc.setFontStyle("normal");
    doc.text(node.content, margins.left, margins.top + 30, {maxWidth: margins.width});

    // add a page that only holds links to other pages
    doc.addPage();
    doc.setFontStyle("bold");
    doc.text("Options", margins.left, margins.top);

    let new_page_count = doc.internal.getNumberOfPages();

    node.page_start = page_count;
    node.page_end = new_page_count;
  });

  doc.setTextColor("blue");
  doc.setFontStyle("italic");
  // insert links between pages
  pages.forEach(function (node, i){
    doc.setPage(node.page_end);
    node.edges.forEach(function (edge, i){
      // find landing page
      let landing_page = pages.filter(page => page.id === edge.node_id)[0].page_start;
      doc.textWithLink(edge.title, margins.left, (margins.top + 30*(1+i)), {pageNumber: landing_page});
    });


  });


  console.log(pages);

  const iframe = document.createElement('iframe');
  iframe.setAttribute('class', 'visualizer_pdf');
  document.getElementById('visualizer_container').innerHTML = "";
  document.getElementById('visualizer_container').append(iframe);
  iframe.src = doc.output('datauristring');

}

export default generatePDF;
